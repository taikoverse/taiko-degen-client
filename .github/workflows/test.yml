name: "CI"

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: taikoxyz/taiko-client

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Lint
        run: make lint

  integration_tests:
    name: Integration tests
    runs-on: ubuntu-latest
    env:
      CLIENT_DIR: taiko-client
      TAIKO_MONO_DIR: taiko-mono

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          repository: taikoxyz/taiko-client
          path: ${{ env.CLIENT_DIR }}

      - uses: actions/checkout@v3
        with:
          repository: taikoxyz/taiko-mono
          path: ${{ env.TAIKO_MONO_DIR }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true
          cache-dependency-path: ${{ env.CLIENT_DIR }}/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.14.2
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install protocol dependencies
        working-directory: ${{ env.TAIKO_MONO_DIR }}
        run: cd ./packages/protocol && pnpm install && ./script/download_solc.sh && forge install

      - name: Build
        working-directory: ${{ env.CLIENT_DIR }}
        run: make build

      - name: Test
        working-directory: ${{ env.CLIENT_DIR }}
        run: |
          TAIKO_MONO_DIR=${GITHUB_WORKSPACE}/${TAIKO_MONO_DIR} COMPILE_PROTOCOL=true make test

      - name: Codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: ${{ env.CLIENT_DIR }}/coverage.out
